<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_brick_8cpp" kind="file">
    <compoundname>Brick.cpp</compoundname>
    <includes refid="_brick_8h" local="yes">Brick.h</includes>
    <incdepgraph>
      <node id="327">
        <label>SDL2/SDL_image.h</label>
      </node>
      <node id="320">
        <label>Background.h</label>
        <link refid="_background_8h"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
      </node>
      <node id="318">
        <label>src/Brick.cpp</label>
        <link refid="Brick.cpp"/>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="322">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="319">
        <label>Brick.h</label>
        <link refid="_brick_8h"/>
        <childnode refid="320" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>Drawable.h</label>
        <link refid="_drawable_8h"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="325">
        <label>iostream</label>
      </node>
      <node id="321">
        <label>Colidable.h</label>
        <link refid="_colidable_8h"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>Gvector.h</label>
        <link refid="_gvector_8h"/>
      </node>
      <node id="326">
        <label>Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>simple<sp/>platformer<sp/>game<sp/>written<sp/>for<sp/>a<sp/>shool<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/><sp/>Wouter<sp/>Peetermans</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_brick_8h" kindref="compound">Brick.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="class_brick_1abd7520a8efa3023b5e2d28870206a342" kindref="member">Brick::Brick</ref>(<ref refid="class_scene" kindref="compound">Scene</ref>*<sp/>context,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos):<ref refid="class_background" kindref="compound">Background</ref>(context,</highlight><highlight class="stringliteral">&quot;game/castle.png&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>init(xpos,ypos);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_brick_1abd7520a8efa3023b5e2d28870206a342" kindref="member">Brick::Brick</ref>(SDL_Texture*<sp/>texture,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos):<ref refid="class_background" kindref="compound">Background</ref>(texture){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>init(xpos,ypos);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><ref refid="class_brick_1a0e27476ccaeaed1d61a06bddf247c8ee" kindref="member">Brick::~Brick</ref>(){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>colRect;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Brick::init(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a9daf44b8008c20bab553dd18b5b0d867" kindref="member">srcRect</ref>.h<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a9daf44b8008c20bab553dd18b5b0d867" kindref="member">srcRect</ref>.w<sp/>=<sp/>64;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a9daf44b8008c20bab553dd18b5b0d867" kindref="member">srcRect</ref>.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a9daf44b8008c20bab553dd18b5b0d867" kindref="member">srcRect</ref>.y<sp/>=<sp/>192;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a1d0b1a450982d3f8bc973b66091e5b1e" kindref="member">posRect</ref>.h<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a1d0b1a450982d3f8bc973b66091e5b1e" kindref="member">posRect</ref>.w<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a1d0b1a450982d3f8bc973b66091e5b1e" kindref="member">posRect</ref>.x<sp/>=<sp/>x*32;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="class_background_1a1d0b1a450982d3f8bc973b66091e5b1e" kindref="member">posRect</ref>.y<sp/>=<sp/>y*32;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>colRect<sp/>=<sp/>&amp;<ref refid="class_background_1a1d0b1a450982d3f8bc973b66091e5b1e" kindref="member">posRect</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_brick_1a035a72f469abf3f1b50221825e9afb4e" kindref="member">Brick::Draw</ref>(SDL_Renderer*<sp/>renderer){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>SDL_RenderCopy(renderer,<sp/><ref refid="class_background_1ac331f21f3db087c4b53fe0224ace3e6b" kindref="member">blockSheet</ref>,<sp/>&amp;<ref refid="class_background_1a9daf44b8008c20bab553dd18b5b0d867" kindref="member">srcRect</ref>,<sp/>&amp;<ref refid="class_background_1a1d0b1a450982d3f8bc973b66091e5b1e" kindref="member">posRect</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="_colidable_8h_1aadda79d10876621f6d849e367f3e85a3" kindref="member">OverlapType</ref><sp/><ref refid="class_brick_1adf1f62c2c51e4cc934bcb9569ba9ce2a" kindref="member">Brick::OverlapDetect</ref>(SDL_Rect*<sp/>rect,SDL_Rect*<sp/>resultRect){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SDL_IntersectRect(rect,colRect,resultRect))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_colidable_8h_1aadda79d10876621f6d849e367f3e85a3a967c83815688d8bc727e2641578de27b" kindref="member">OL_COLLISION</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_colidable_8h_1aadda79d10876621f6d849e367f3e85a3a14a7a39c100848c4570017b2ef208be2" kindref="member">OL_NO_COLLISION</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wouter/Documents/sdlGame/src/Brick.cpp"/>
  </compounddef>
</doxygen>
