<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_un_movable_8cpp" kind="file">
    <compoundname>UnMovable.cpp</compoundname>
    <includes refid="_un_movable_8h" local="yes">UnMovable.h</includes>
    <incdepgraph>
      <node id="143">
        <label>SDL2/SDL_image.h</label>
      </node>
      <node id="142">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="139">
        <label>src/UnMovable.cpp</label>
        <link refid="UnMovable.cpp"/>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>Drawable.h</label>
        <link refid="_drawable_8h"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>iostream</label>
      </node>
      <node id="145">
        <label>Gvector.h</label>
        <link refid="_gvector_8h"/>
      </node>
      <node id="140">
        <label>UnMovable.h</label>
        <link refid="_un_movable_8h"/>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>simple<sp/>platformer<sp/>game<sp/>written<sp/>for<sp/>a<sp/>shool<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/><sp/>Wouter<sp/>Peetermans</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_un_movable_8h" kindref="compound">UnMovable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="class_un_movable_1a87504be12939f92e094a8642648560b5" kindref="member">UnMovable::UnMovable</ref>(SDL_Renderer*<sp/>renderer,<sp/>SDL_Texture*<sp/>texture<sp/>,SDL_Rect*<sp/>rect):<ref refid="class_drawable" kindref="compound">Drawable</ref>(renderer,<sp/>texture,<sp/>rect){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_un_movable_1a87504be12939f92e094a8642648560b5" kindref="member">UnMovable::UnMovable</ref>(SDL_Renderer*<sp/>renderer,<sp/>SDL_Texture*<sp/>texture<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y):<ref refid="class_drawable" kindref="compound">Drawable</ref>(renderer,<sp/>texture<sp/>,<sp/>w<sp/>,<sp/>h<sp/>,<sp/>x<sp/>,<sp/>y){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_un_movable_1a92b8aaedae48b7f459e0379e724f24de" kindref="member">UnMovable::~UnMovable</ref>(){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_un_movable_1ad26a7001aa816ce00805871a98d4a953" kindref="member">UnMovable::SetColidable</ref>(SDL_Rect*<sp/>rect){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rect-&gt;w<sp/>&lt;=<sp/><ref refid="class_drawable_1a38f8357dfc584338752cf7840b994494" kindref="member">destRect</ref>-&gt;w)&amp;&amp;(rect-&gt;h<sp/>&lt;=<sp/><ref refid="class_drawable_1a38f8357dfc584338752cf7840b994494" kindref="member">destRect</ref>-&gt;h))<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_un_movable_1aa3986135bfd14eba5f0d575eb05f529e" kindref="member">colideRect</ref><sp/>==<sp/>rect;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_un_movable_1aa3986135bfd14eba5f0d575eb05f529e" kindref="member">colideRect</ref>-&gt;x<sp/>=<sp/><ref refid="class_drawable_1a38f8357dfc584338752cf7840b994494" kindref="member">destRect</ref>-&gt;x;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_un_movable_1aa3986135bfd14eba5f0d575eb05f529e" kindref="member">colideRect</ref>-&gt;y<sp/>=<sp/><ref refid="class_drawable_1a38f8357dfc584338752cf7840b994494" kindref="member">destRect</ref>-&gt;y;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>rect<sp/>was<sp/>a<sp/>litle<sp/>to<sp/>big<sp/>for<sp/>this<sp/>block&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="_drawable_8h_1aadda79d10876621f6d849e367f3e85a3" kindref="member">OverlapType</ref><sp/><ref refid="class_un_movable_1abf6321ffd2bc2bd42c7d706247fa0df2" kindref="member">UnMovable::OverlapDetect</ref>(SDL_Rect*<sp/>rect){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_un_movable_1aa3986135bfd14eba5f0d575eb05f529e" kindref="member">colideRect</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_drawable_8h_1aadda79d10876621f6d849e367f3e85a3a14a7a39c100848c4570017b2ef208be2" kindref="member">OL_NO_COLLISION</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wouter/Documents/sdlGame/src/UnMovable.cpp"/>
  </compounddef>
</doxygen>
